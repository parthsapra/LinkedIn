import { routeContainer } from "../core/route-container";
export function authResolver(injector, next) {
    return function (anonymous) {
        if (!anonymous) {
            var authResolverModel = routeContainer.get().authentication;
            if (authResolverModel) {
                var authResolver = injector.get(authResolverModel);
                var result = authResolver.resolveAuth();
                if (result instanceof Promise) {
                    result.then(function (t) {
                        routeContainer.setUser(t);
                        next(t);
                    });
                }
                else {
                    routeContainer.setUser(result);
                    next(result);
                }
            }
            else
                next(result);
        }
        else
            next(result);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1yZXNvbHZlci5mdW5jdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9hbmd1bGFyLXJvdXRlci8iLCJzb3VyY2VzIjpbImZ1bmN0aW9ucy9hdXRoLXJlc29sdmVyLmZ1bmN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUd6RCxNQUFNLFVBQVUsWUFBWSxDQUFDLFFBQWtCLEVBQUUsSUFBYztJQUMzRCxPQUFPLFVBQUMsU0FBUztRQUNiLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDWixJQUFJLGlCQUFpQixHQUFHLGNBQWMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUM7WUFDNUQsSUFBSSxpQkFBaUIsRUFBRTtnQkFDbkIsSUFBSSxZQUFZLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBa0IsQ0FBQztnQkFDcEUsSUFBSSxNQUFNLEdBQUcsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO2dCQUN4QyxJQUFJLE1BQU0sWUFBWSxPQUFPLEVBQUU7b0JBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDO3dCQUNULGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQzFCLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDWixDQUFDLENBQUMsQ0FBQTtpQkFDTDtxQkFBTTtvQkFDSCxjQUFjLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ2hCO2FBQ0o7O2dCQUNHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNwQjs7WUFDRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFBO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgcm91dGVDb250YWluZXIgfSBmcm9tIFwiLi4vY29yZS9yb3V0ZS1jb250YWluZXJcIjtcclxuaW1wb3J0IHsgSUF1dGhSZXNvbHZlciB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL2ktYXV0aC1yZXNvbHZlclwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGF1dGhSZXNvbHZlcihpbmplY3RvcjogSW5qZWN0b3IsIG5leHQ6IEZ1bmN0aW9uKSB7XHJcbiAgICByZXR1cm4gKGFub255bW91cykgPT4ge1xyXG4gICAgICAgIGlmICghYW5vbnltb3VzKSB7XHJcbiAgICAgICAgICAgIHZhciBhdXRoUmVzb2x2ZXJNb2RlbCA9IHJvdXRlQ29udGFpbmVyLmdldCgpLmF1dGhlbnRpY2F0aW9uO1xyXG4gICAgICAgICAgICBpZiAoYXV0aFJlc29sdmVyTW9kZWwpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhdXRoUmVzb2x2ZXIgPSBpbmplY3Rvci5nZXQoYXV0aFJlc29sdmVyTW9kZWwpIGFzIElBdXRoUmVzb2x2ZXI7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gYXV0aFJlc29sdmVyLnJlc29sdmVBdXRoKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKHQgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZUNvbnRhaW5lci5zZXRVc2VyKHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0KHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJvdXRlQ29udGFpbmVyLnNldFVzZXIocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICBuZXh0KHJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICAgICAgbmV4dChyZXN1bHQpO1xyXG4gICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICBuZXh0KHJlc3VsdCk7XHJcbiAgICB9XHJcbn1cclxuIl19