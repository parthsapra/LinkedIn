import * as tslib_1 from "tslib";
import { routeContainer } from "./route-container";
import { BaseCanActivate } from "../guard/base-can-activate.guard";
import { BaseCanDeactivate } from "../guard/base-can-deactivate.guard";
import { routePath } from "../functions/route-path.function";
var RouteProvider = /** @class */ (function () {
    function RouteProvider() {
    }
    RouteProvider.addRoute = function (route) {
        this.addCanActivate(route);
        this.addCanDeactivate(route);
        this._routes.push(route);
    };
    RouteProvider.applyRootRoutes = function (_routes) {
        this.routes = [];
        var routes = _routes || tslib_1.__spread(this._routes);
        var isAllowEncryption = routeContainer.get().urlEncryption;
        if (isAllowEncryption) {
            routes.forEach(function (route) {
                route.path = routePath(route.path);
            });
        }
        this._routes = [];
        this.routes = routes;
    };
    RouteProvider.addCanActivate = function (route) {
        if (!route.canActivate)
            route.canActivate = [BaseCanActivate];
        else
            route.canActivate.push(BaseCanActivate);
    };
    RouteProvider.addCanDeactivate = function (route) {
        if (!route.canDeactivate)
            route.canDeactivate = [BaseCanDeactivate];
        else
            route.canDeactivate.push(BaseCanDeactivate);
    };
    RouteProvider.routes = [];
    RouteProvider._routes = [];
    return RouteProvider;
}());
export { RouteProvider };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Acnh3ZWIvYW5ndWxhci1yb3V0ZXIvIiwic291cmNlcyI6WyJjb3JlL3JvdXRlLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUU3RDtJQUFBO0lBeUNBLENBQUM7SUFwQ1Usc0JBQVEsR0FBZixVQUFnQixLQUFZO1FBQ3hCLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO0lBQzVCLENBQUM7SUFHTSw2QkFBZSxHQUF0QixVQUF1QixPQUFlO1FBQ2xDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksTUFBTSxHQUFHLE9BQU8scUJBQVEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFDLElBQUksaUJBQWlCLEdBQUcsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQztRQUMzRCxJQUFJLGlCQUFpQixFQUFFO1lBQ25CLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLO2dCQUNoQixLQUFLLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDdkMsQ0FBQyxDQUFDLENBQUE7U0FDTDtRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFJYyw0QkFBYyxHQUE3QixVQUE4QixLQUFZO1FBQ3RDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVztZQUNsQixLQUFLLENBQUMsV0FBVyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7O1lBRXRDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFYyw4QkFBZ0IsR0FBL0IsVUFBZ0MsS0FBWTtRQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWE7WUFDcEIsS0FBSyxDQUFDLGFBQWEsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUM7O1lBRTFDLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDcEQsQ0FBQztJQXRDTSxvQkFBTSxHQUFXLEVBQUUsQ0FBQztJQUVaLHFCQUFPLEdBQVcsRUFBRSxDQUFDO0lBc0N4QyxvQkFBQztDQUFBLEFBekNELElBeUNDO1NBekNZLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyAgUm91dGVzLCBSb3V0ZSB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgcm91dGVDb250YWluZXIgfSBmcm9tIFwiLi9yb3V0ZS1jb250YWluZXJcIjtcclxuaW1wb3J0IHsgQmFzZUNhbkFjdGl2YXRlIH0gZnJvbSBcIi4uL2d1YXJkL2Jhc2UtY2FuLWFjdGl2YXRlLmd1YXJkXCI7XHJcbmltcG9ydCB7IEJhc2VDYW5EZWFjdGl2YXRlIH0gZnJvbSBcIi4uL2d1YXJkL2Jhc2UtY2FuLWRlYWN0aXZhdGUuZ3VhcmRcIjtcclxuaW1wb3J0IHsgcm91dGVQYXRoIH0gZnJvbSBcIi4uL2Z1bmN0aW9ucy9yb3V0ZS1wYXRoLmZ1bmN0aW9uXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUm91dGVQcm92aWRlciB7XHJcbiAgICBzdGF0aWMgcm91dGVzOiBSb3V0ZXMgPSBbXTtcclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBfcm91dGVzOiBSb3V0ZXMgPSBbXTtcclxuXHJcbiAgICBzdGF0aWMgYWRkUm91dGUocm91dGU6IFJvdXRlKSB7XHJcbiAgICAgICAgdGhpcy5hZGRDYW5BY3RpdmF0ZShyb3V0ZSk7XHJcbiAgICAgICAgdGhpcy5hZGRDYW5EZWFjdGl2YXRlKHJvdXRlKTtcclxuICAgICAgICB0aGlzLl9yb3V0ZXMucHVzaChyb3V0ZSlcclxuICAgIH1cclxuXHJcblxyXG4gICAgc3RhdGljIGFwcGx5Um9vdFJvdXRlcyhfcm91dGVzPzpSb3V0ZXMpIHtcclxuICAgICAgICB0aGlzLnJvdXRlcyA9IFtdO1xyXG4gICAgICAgIHZhciByb3V0ZXMgPSBfcm91dGVzIHx8IFsuLi50aGlzLl9yb3V0ZXNdO1xyXG4gICAgICAgIHZhciBpc0FsbG93RW5jcnlwdGlvbiA9IHJvdXRlQ29udGFpbmVyLmdldCgpLnVybEVuY3J5cHRpb247XHJcbiAgICAgICAgaWYgKGlzQWxsb3dFbmNyeXB0aW9uKSB7XHJcbiAgICAgICAgICAgIHJvdXRlcy5mb3JFYWNoKHJvdXRlID0+IHtcclxuICAgICAgICAgICAgICAgIHJvdXRlLnBhdGggPSByb3V0ZVBhdGgocm91dGUucGF0aCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3JvdXRlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMucm91dGVzID0gcm91dGVzO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgYWRkQ2FuQWN0aXZhdGUocm91dGU6IFJvdXRlKSB7XHJcbiAgICAgICAgaWYgKCFyb3V0ZS5jYW5BY3RpdmF0ZSlcclxuICAgICAgICAgICAgcm91dGUuY2FuQWN0aXZhdGUgPSBbQmFzZUNhbkFjdGl2YXRlXTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHJvdXRlLmNhbkFjdGl2YXRlLnB1c2goQmFzZUNhbkFjdGl2YXRlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBhZGRDYW5EZWFjdGl2YXRlKHJvdXRlOiBSb3V0ZSkge1xyXG4gICAgICAgIGlmICghcm91dGUuY2FuRGVhY3RpdmF0ZSlcclxuICAgICAgICAgICAgcm91dGUuY2FuRGVhY3RpdmF0ZSA9IFtCYXNlQ2FuRGVhY3RpdmF0ZV07XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICByb3V0ZS5jYW5EZWFjdGl2YXRlLnB1c2goQmFzZUNhbkRlYWN0aXZhdGUpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=