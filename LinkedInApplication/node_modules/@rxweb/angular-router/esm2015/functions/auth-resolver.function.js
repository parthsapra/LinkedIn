import { routeContainer } from "../core/route-container";
export function authResolver(injector, next) {
    return (anonymous) => {
        if (!anonymous) {
            var authResolverModel = routeContainer.get().authentication;
            if (authResolverModel) {
                var authResolver = injector.get(authResolverModel);
                var result = authResolver.resolveAuth();
                if (result instanceof Promise) {
                    result.then(t => {
                        routeContainer.setUser(t);
                        next(t);
                    });
                }
                else {
                    routeContainer.setUser(result);
                    next(result);
                }
            }
            else
                next(result);
        }
        else
            next(result);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1yZXNvbHZlci5mdW5jdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9hbmd1bGFyLXJvdXRlci8iLCJzb3VyY2VzIjpbImZ1bmN0aW9ucy9hdXRoLXJlc29sdmVyLmZ1bmN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUd6RCxNQUFNLFVBQVUsWUFBWSxDQUFDLFFBQWtCLEVBQUUsSUFBYztJQUMzRCxPQUFPLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDakIsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNaLElBQUksaUJBQWlCLEdBQUcsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FBQztZQUM1RCxJQUFJLGlCQUFpQixFQUFFO2dCQUNuQixJQUFJLFlBQVksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFrQixDQUFDO2dCQUNwRSxJQUFJLE1BQU0sR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQ3hDLElBQUksTUFBTSxZQUFZLE9BQU8sRUFBRTtvQkFDM0IsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRTt3QkFDWixjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUMxQixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ1osQ0FBQyxDQUFDLENBQUE7aUJBQ0w7cUJBQU07b0JBQ0gsY0FBYyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztvQkFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUNoQjthQUNKOztnQkFDRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEI7O1lBQ0csSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JCLENBQUMsQ0FBQTtBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RvciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IHJvdXRlQ29udGFpbmVyIH0gZnJvbSBcIi4uL2NvcmUvcm91dGUtY29udGFpbmVyXCI7XHJcbmltcG9ydCB7IElBdXRoUmVzb2x2ZXIgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9pLWF1dGgtcmVzb2x2ZXJcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhdXRoUmVzb2x2ZXIoaW5qZWN0b3I6IEluamVjdG9yLCBuZXh0OiBGdW5jdGlvbikge1xyXG4gICAgcmV0dXJuIChhbm9ueW1vdXMpID0+IHtcclxuICAgICAgICBpZiAoIWFub255bW91cykge1xyXG4gICAgICAgICAgICB2YXIgYXV0aFJlc29sdmVyTW9kZWwgPSByb3V0ZUNvbnRhaW5lci5nZXQoKS5hdXRoZW50aWNhdGlvbjtcclxuICAgICAgICAgICAgaWYgKGF1dGhSZXNvbHZlck1vZGVsKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXV0aFJlc29sdmVyID0gaW5qZWN0b3IuZ2V0KGF1dGhSZXNvbHZlck1vZGVsKSBhcyBJQXV0aFJlc29sdmVyO1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGF1dGhSZXNvbHZlci5yZXNvbHZlQXV0aCgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbih0ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVDb250YWluZXIuc2V0VXNlcih0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dCh0KTtcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByb3V0ZUNvbnRhaW5lci5zZXRVc2VyKHJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV4dChyZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgICAgIG5leHQocmVzdWx0KTtcclxuICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgbmV4dChyZXN1bHQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==