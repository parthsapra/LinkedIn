import { OnDestroy, Type } from "@angular/core";
import { RxHttp } from "@rxweb/http";
import { ClientDataStorage } from "@rxweb/storage";
import { AuthorizeConfig } from '../interfaces/authorize-config';
import { ExtendNavigationExtras } from "../interfaces/extend-navigation-extras";
export declare abstract class CoreComponent extends RxHttp implements OnDestroy {
    user: {
        [key: string]: any;
    };
    params: {
        [key: string]: any;
    };
    queryParams: {
        [key: string]: any;
    };
    data: any;
    storage: ClientDataStorage;
    parentAuthorizeConfig: AuthorizeConfig;
    authorizeConfig: AuthorizeConfig;
    private navigation;
    onQueryParamsChanged(): void;
    onParamsChanged(): void;
    constructor();
    private instanceProvider;
    resolve<T>(component: Type<T>): T;
    navigate(commands: any[], extras?: ExtendNavigationExtras): Promise<boolean>;
    ngOnDestroy(): void;
    private paramsChange;
    private queryParamsChange;
    private getParsedParams;
}
