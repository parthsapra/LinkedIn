{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@rxweb/angular-router/core/route-container.ts","ng://@rxweb/angular-router/core/component-instance-provider.ts","ng://@rxweb/angular-router/functions/middleware.function.ts","ng://@rxweb/angular-router/core/encoder.ts","ng://@rxweb/angular-router/core/param-resolver.service.ts","ng://@rxweb/angular-router/guard/base-can-activate.guard.ts","ng://@rxweb/angular-router/functions/params-decryption.function.ts","ng://@rxweb/angular-router/functions/auth-resolver.function.ts","ng://@rxweb/angular-router/functions/authorize.function.ts","ng://@rxweb/angular-router/guard/base-can-deactivate.guard.ts","ng://@rxweb/angular-router/functions/route-path.function.ts","ng://@rxweb/angular-router/core/route-provider.ts","ng://@rxweb/angular-router/directives/extend-router-link-with-href.ts","ng://@rxweb/angular-router/directives/rx-authorize.directive.ts","ng://@rxweb/angular-router/directives/rx-multilingual.directive.ts","ng://@rxweb/angular-router/modules/rx-routing-module.ts","ng://@rxweb/angular-router/interfaces/authorize-config.ts","ng://@rxweb/angular-router/core/core-component.ts","ng://@rxweb/angular-router/decorators/access.decorator.ts","ng://@rxweb/angular-router/decorators/anonymous.decorator.ts","ng://@rxweb/angular-router/decorators/middleware.decorator.ts","ng://@rxweb/angular-router/decorators/route.decorator.ts","ng://@rxweb/angular-router/decorators/router-module.decorator.ts","ng://@rxweb/angular-router/functions/routes.function.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","routeContainer","class_1","state","modelDecorators","add","routerConfig","get","getUser","user","setUser","addModelDecorator","data","type","functions","getModelDecorator","filter","t","componentInstanceProvider","instances","broadCastParamChange","params","keys","forEach","paramChanged","broadCastQueryParamChange","queryParams","queryParamChanged","setComponentRoute","route","router","activatedRouteSnapshot","setAuthroizeConfig","config","authorizeConfig","getAuthorizeConfig","getResult","getActivatedRouteSnapshot","getRouter","name","resolver","resolve","instance","Error","dispose","splice","middleware","injector","complete","middlewareModels","middlewares","modelMiddleware","component","callFunction","count","undefined","result","invoke","Promise","then","encoder","decode","replace","atob","encode","btoa","ParamResolver","activatedRoute","Injectable","ActivatedRoute","Router","BaseCanActivate","paramResolver","canActivate","_this","reject","urlEncryption","preventExtensions","paramsDecryption","resolveRoute","anonymous","authorizeModel","authorization","authorize","authResolverModel","authentication","resolveAuth","Injector","BaseCanDeactivate","canDeactivate","currentRoute","currentState","nextState","routePath","path","splitText","split","isParam","charAt","RouteProvider","addRoute","addCanActivate","addCanDeactivate","_routes","applyRootRoutes","routes","ExtendRouterLinkWithHref","locationStratergy","_super","isPushed","overrideProp","tslib_1.__extends","isEncryption","isArray","set","v","tslib_1.__decorate","Input","Directive","selector","LocationStrategy","RouterLinkWithHref","RxAuthorizeDirective","viewContainerRef","templateRef","viewRef","_context","NgIfContext","_components","checkAuth","checkAccess","index","updateView","currentIndex","authorizeChildren","clear","createEmbeddedView","ViewContainerRef","TemplateRef","RxMultilingualDirective","childMultiLingual","childMultilingualResolver","resolveChildren","RxRoutingModule","NgModule","declarations","exports","providers","CoreComponent","navigation","storage","ClientDataStorage","parentAuthorizeConfig","decoratorConfig","instanceProvider","bind","paramsChange","queryParamsChange","onQueryParamsChanged","onParamsChanged","navigate","commands","extras","getParsedParams","ngOnDestroy","RxHttp","redirectTo"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ModelDecoratorConfiguration } from \"../interfaces/model-decorator-configuration\";\r\nimport { RouterModuleConfig } from \"../interfaces/router-module-config\";\r\n\r\nexport const routeContainer:\r\n    {\r\n        add(routerConfig: RouterModuleConfig),\r\n        get(): RouterModuleConfig,\r\n        setUser(user: { [key: string]: any }),\r\n        addModelDecorator(target: Function, data: any, type: string),\r\n        getModelDecorator(target: Function, type: string): ModelDecoratorConfiguration\r\n        getUser(): { [key: string]: any };\r\n    } = new (class {\r\n        state: RouterModuleConfig = {};\r\n        user: { [key: string]: any };\r\n        modelDecorators: Array<ModelDecoratorConfiguration> = new Array<ModelDecoratorConfiguration>();\r\n\r\n        add(routerConfig: RouterModuleConfig) {\r\n            this.state = routerConfig;\r\n        }\r\n\r\n        get(): RouterModuleConfig {\r\n            return this.state;\r\n        }\r\n\r\n        getUser() {\r\n            return this.user;\r\n        }\r\n\r\n        setUser(user: { [key: string]: any }) {\r\n            this.user = user;\r\n        }\r\n\r\n        addModelDecorator(target: Function, data: any, type: string) {\r\n            this.modelDecorators.push({ target: target, functions: data, type: type });\r\n        }\r\n\r\n        getModelDecorator(target: Function, type: string): ModelDecoratorConfiguration {\r\n            return this.modelDecorators.filter(t => t.target == target && t.type == type)[0];\r\n        }\r\n\r\n    })();\r\n","import { ComponentInstanceConfig } from \"../interfaces/component-instance-config\";\r\nimport { ActivatedRouteSnapshot, Router } from \"@angular/router\";\r\nimport { AuthorizeConfig } from '../interfaces/authorize-config'\r\nexport const componentInstanceProvider:\r\n    {\r\n        add(name: string, resolver: Function, paramChanged: (params: { [key: string]: any }) => void, queryParamChanged: (queryParams: { [key: string]: any }) => void),\r\n        resolve(target: Function),\r\n        dispose(target: Function)\r\n        setComponentRoute(route: ActivatedRouteSnapshot,router:Router);\r\n        getActivatedRouteSnapshot(): ActivatedRouteSnapshot;\r\n        getRouter(): Router;\r\n        getResult(): { activatedRouteSnapshot: ActivatedRouteSnapshot, router: Router, authorizeConfig: AuthorizeConfig },\r\n        setAuthroizeConfig(config: AuthorizeConfig),\r\n        getAuthorizeConfig() \r\n    } = new (class {\r\n        instances: Array<ComponentInstanceConfig> = new Array<ComponentInstanceConfig>();\r\n        activatedRouteSnapshot: ActivatedRouteSnapshot;\r\n        router: Router;\r\n        authorizeConfig:AuthorizeConfig\r\n        broadCastParamChange(params: { [key: string]: any }) {\r\n            if (Object.keys(params).length > 0)\r\n            this.instances.forEach(t => {\r\n                t.paramChanged(params);\r\n            })\r\n        }\r\n\r\n        broadCastQueryParamChange(queryParams: { [key: string]: any }) {\r\n            if (Object.keys(queryParams).length > 0)\r\n                this.instances.forEach(t => {\r\n                    t.queryParamChanged(queryParams);\r\n                })\r\n        }\r\n\r\n        setComponentRoute(route: ActivatedRouteSnapshot,router:Router) {\r\n            this.activatedRouteSnapshot = route;\r\n            this.router = router;\r\n            this.broadCastParamChange(route.params);\r\n            this.broadCastQueryParamChange(route.queryParams);\r\n        }\r\n\r\n        setAuthroizeConfig(config: AuthorizeConfig) {\r\n            this.authorizeConfig = config;\r\n        }\r\n\r\n        getAuthorizeConfig() {\r\n            return this.authorizeConfig;\r\n        }\r\n\r\n        getResult() {\r\n            return {\r\n                activatedRouteSnapshot: this.activatedRouteSnapshot,\r\n                router: this.router,\r\n                authorizeConfig: this.authorizeConfig\r\n            }\r\n        }\r\n\r\n        getActivatedRouteSnapshot() {\r\n            return this.activatedRouteSnapshot;\r\n        }\r\n\r\n        getRouter() {\r\n            return this.router;\r\n        }\r\n\r\n        add(name: string, resolver: Function, paramChanged: (params: { [key: string]: any }) => void, queryParamChanged: (queryParams: { [key: string]: any }) => void) {\r\n            this.instances.push({ name: name, resolver: resolver, paramChanged: paramChanged, queryParamChanged: queryParamChanged });\r\n        }\r\n\r\n        resolve(target: Function) {\r\n            let instance = this.instances.filter(t => t.name == target.name)[0];\r\n            if (instance)\r\n                return instance.resolver();\r\n            throw new Error(\"Component instance is not available\");\r\n        }\r\n\r\n        dispose(target: Function) {\r\n            let instances = this.instances.filter(t => t.name == target.name);\r\n            let length = instances.length;\r\n            for (var i = 0; i < length; i++)\r\n                instances.splice(0, 1);\r\n        }\r\n    })();\r\n","import { Injector } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { routeContainer } from \"../core/route-container\";\r\nimport { IMiddleware } from \"../interfaces/i-middleware\";\r\n\r\nexport function middleware(injector: Injector, route: ActivatedRouteSnapshot, complete: Function) {\r\n    return (user) => {\r\n        var middlewareModels = routeContainer.get().middlewares;\r\n        var modelMiddleware = routeContainer.getModelDecorator(route.component as Function, \"middleware\");\r\n        if (modelMiddleware) \r\n            middlewareModels = middlewareModels ? [...middlewareModels as Function[], ...modelMiddleware.functions] : [...modelMiddleware.functions];\r\n        if (middlewareModels)\r\n            callFunction(user, injector, route,complete, middlewareModels);\r\n        else\r\n            complete(true);\r\n    }\r\n}\r\n\r\nfunction callFunction(user: { [key: string]: any }, injector: Injector, route: ActivatedRouteSnapshot,  complete: Function, middlewareModels: any, count?: number) {\r\n    count = count == undefined ? 0 : count + 1;\r\n    var middleware = injector.get(middlewareModels[count]) as IMiddleware;\r\n    if (middleware) {\r\n        var result = middleware.invoke(user, route)\r\n        if (result instanceof Promise) {\r\n            result.then(t => {\r\n                if (t) {\r\n                    if (middlewareModels.length > (count + 1))\r\n                        callFunction(user, injector, route,complete, middlewareModels, count)\r\n                    else\r\n                        complete(t);\r\n                } else\r\n                    complete(t);\r\n            })\r\n        } else\r\n            if (result && middlewareModels.length > (count + 1))\r\n                callFunction(user, injector, route,complete, middlewareModels, count)\r\n            else\r\n                complete(result)\r\n    } else\r\n        complete(true);\r\n}\r\n","export const encoder:\r\n    {\r\n        encode(value:string),\r\n        decode(value:string),\r\n    } = new (class {\r\n\r\n        decode(value: string) {\r\n            value = value.replace(\"00\", \"=\").replace(\"00\", \"=\")\r\n            var text = atob(value);\r\n            return text;\r\n        }\r\n\r\n        encode(value:string) {\r\n            let text = btoa(value).replace(\"=\", \"00\").replace(\"=\", \"00\");\r\n            return text;\r\n        }\r\n\r\n    })();\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class ParamResolver{\r\n    constructor(public activatedRoute: ActivatedRoute, public router: Router) { }\r\n}","import { Injectable, Injector } from \"@angular/core\";\r\nimport { Router ,CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\"\r\nimport { authResolver } from \"../functions/auth-resolver.function\";\r\nimport { authorize } from \"../functions/authorize.function\";\r\nimport { middleware } from \"../functions/middleware.function\";\r\nimport { paramsDecryption } from \"../functions/params-decryption.function\";\r\nimport { ParamResolver } from \"../core/param-resolver.service\";\r\nimport { componentInstanceProvider } from \"../core/component-instance-provider\";\r\n\r\n\n@Injectable()\nexport class BaseCanActivate implements CanActivate {\n    constructor(\n        private injector: Injector, private paramResolver: ParamResolver) { }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): boolean | Promise<boolean> {\n        var promise = new Promise<boolean>((r, reject) => {\n            paramsDecryption(route);\n            let resolve = this.resolveRoute(r, route)\n            authorize(this.injector, route, authResolver(this.injector, middleware(this.injector,route,resolve)), resolve)\n        })\n        return promise;\n    }\n\n    resolveRoute(resolve, route: ActivatedRouteSnapshot) {\n        return (value: boolean) => {\n            if (value) \n                componentInstanceProvider.setComponentRoute(route, this.injector.get(Router));\n            resolve(value);\n        }\n    }\n}\n","import { ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { routeContainer } from \"../core/route-container\";\r\nimport { encoder } from \"../core/encoder\";\r\n\r\nexport function paramsDecryption(route: ActivatedRouteSnapshot) {\r\n    var isEncryption = routeContainer.get().urlEncryption;\r\n    if (isEncryption) {\r\n        var params = {};\r\n        Object.keys(route.params).forEach(t => {\r\n            let value = encoder.decode(route.params[t]);\r\n            Object.defineProperty(params, t, {\r\n                get: function () { return value; },\r\n            }); \r\n        })\r\n        delete route.params;\r\n        route.params = Object.preventExtensions(params);\r\n    }\r\n}\r\n","import { Injector } from \"@angular/core\";\r\nimport { routeContainer } from \"../core/route-container\";\r\nimport { IAuthResolver } from \"../interfaces/i-auth-resolver\";\r\n\r\nexport function authResolver(injector: Injector, next: Function) {\r\n    return (anonymous) => {\r\n        if (!anonymous) {\r\n            var authResolverModel = routeContainer.get().authentication;\r\n            if (authResolverModel) {\r\n                var authResolver = injector.get(authResolverModel) as IAuthResolver;\r\n                var result = authResolver.resolveAuth();\r\n                if (result instanceof Promise) {\r\n                    result.then(t => {\r\n                        routeContainer.setUser(t);\r\n                        next(t);\r\n                    })\r\n                } else {\r\n                    routeContainer.setUser(result);\r\n                    next(result);\r\n                }\r\n            } else\r\n                next(result);\r\n        } else\r\n            next(result);\r\n    }\r\n}\r\n","import { Injector } from \"@angular/core\";\r\nimport { routeContainer } from \"../core/route-container\";\r\nimport { AUTHORIZATION } from \"../const/app-const\";\r\nimport { ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { IAuthorize } from \"../interfaces/i-authorize\";\r\nimport { componentInstanceProvider } from \"../core/component-instance-provider\";\r\n\r\nexport function authorize(injector: Injector, route: ActivatedRouteSnapshot, next: Function, complete: Function) {\r\n        let component = routeContainer.getModelDecorator(route.component as Function, \"access\");\r\n        let anonymous = routeContainer.getModelDecorator(route.component as Function, \"anonymous\");\r\n        //if (!component && !anonymous)\r\n        //    throw `Define anyone (@anonymous() or @access({...})) decorator on the route component `;\r\n        if (component) {\r\n            var authorizeModel = routeContainer.get().authorization;\r\n            if (authorizeModel) {\r\n                var authorize = injector.get(authorizeModel) as IAuthorize;\r\n                var result = authorize.authorize(component.functions,route);\r\n                if (result instanceof Promise) {\r\n                    result.then(t => {\r\n                        if (t)\r\n                            componentInstanceProvider.setAuthroizeConfig(component.functions),next(anonymous);\r\n                        else\r\n                            complete(false)\r\n                    })\r\n                } else if (result === true)\r\n                    componentInstanceProvider.setAuthroizeConfig(component.functions),next(anonymous)\r\n                else\r\n                    complete(result)\r\n\r\n            } else\r\n                next(anonymous);\r\n        } else\r\n            next(anonymous);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\"\r\n\r\n@Injectable()\nexport class BaseCanDeactivate implements CanDeactivate<any> {\n    constructor() { }\n\n    canDeactivate(\n        component: any,\n        currentRoute: ActivatedRouteSnapshot,\n        currentState: RouterStateSnapshot,\n        nextState: RouterStateSnapshot\n    ): boolean {\n        return (component.canDeactivate) ? component.canDeactivate(currentRoute, currentState, nextState) : true;\n    }\n}\n","import { encoder } from '../core/encoder'\r\n\r\nexport function routePath(path: string) {\r\n        var splitText = path.split('/');\r\n        var path = \"\";\r\n        splitText.forEach(t => {\r\n            let isParam = t.charAt(0) == \":\";\r\n            if (path == \"\" && isParam)\r\n                path = t;\r\n            else if (isParam)\r\n                path += `/${t}`;\r\n            else if (path === \"\")\r\n                path += `${encoder.encode(t)}`\r\n            else\r\n                path += `/${encoder.encode(t)}`\r\n        })\r\n        return path;\r\n}","import {  Routes, Route } from \"@angular/router\";\r\nimport { routeContainer } from \"./route-container\";\r\nimport { BaseCanActivate } from \"../guard/base-can-activate.guard\";\r\nimport { BaseCanDeactivate } from \"../guard/base-can-deactivate.guard\";\r\nimport { routePath } from \"../functions/route-path.function\";\r\n\r\nexport class RouteProvider {\r\n    static routes: Routes = [];\r\n\r\n    private static _routes: Routes = [];\r\n\r\n    static addRoute(route: Route) {\r\n        this.addCanActivate(route);\r\n        this.addCanDeactivate(route);\r\n        this._routes.push(route)\r\n    }\r\n\r\n\r\n    static applyRootRoutes(_routes?:Routes) {\r\n        this.routes = [];\r\n        var routes = _routes || [...this._routes];\r\n        var isAllowEncryption = routeContainer.get().urlEncryption;\r\n        if (isAllowEncryption) {\r\n            routes.forEach(route => {\r\n                route.path = routePath(route.path);\r\n            })\r\n        }\r\n        this._routes = [];\r\n        this.routes = routes;\r\n    }\r\n\r\n\r\n\r\n    private static addCanActivate(route: Route) {\r\n        if (!route.canActivate)\r\n            route.canActivate = [BaseCanActivate];\r\n        else\r\n            route.canActivate.push(BaseCanActivate);\r\n    }\r\n\r\n    private static addCanDeactivate(route: Route) {\r\n        if (!route.canDeactivate)\r\n            route.canDeactivate = [BaseCanDeactivate];\r\n        else\r\n            route.canDeactivate.push(BaseCanDeactivate);\r\n    }\r\n\r\n}\r\n","import { Directive, Input, HostBinding } from \"@angular/core\";\r\nimport { RouterLinkWithHref, Router, ActivatedRoute } from \"@angular/router\";\r\nimport { encoder } from \"../core/encoder\";\r\nimport { routeContainer } from \"../core\";\r\nimport { LocationStrategy } from \"@angular/common\";\r\n\r\n@Directive({ selector: 'a[routerLink],area[routerLink]' })\r\nexport class ExtendRouterLinkWithHref extends RouterLinkWithHref {\n    isPushed: boolean = false;\r\n    constructor(router: Router, activatedRoute: ActivatedRoute, locationStratergy: LocationStrategy) {\r\n        super(router, activatedRoute, locationStratergy);\n        this.overrideProp();\n    }\n\n    @Input() params: any[];\n\n    overrideProp() {\n        var value = [];\n        Object.defineProperty(this, \"commands\", {\n            get: function () {\n                var isEncryption = routeContainer.get().urlEncryption;\n                if (Array.isArray(value) && Array.isArray(this.params) && !this.isPushed) {\n                    this.params.forEach(t => {\n                        let encode = isEncryption ? encoder.encode(t) : t;\n                        value.push(encode);\n                    })\n                    this.isPushed = true;\n                }\n                return value;\n            },\n            set: function (v) {\n                value = v;\n            }\n        })\n    }\n}\n","import { Injector, Directive, Type, EmbeddedViewRef, ViewContainerRef, TemplateRef, Input } from \"@angular/core\";\r\nimport { NgIfContext } from \"@angular/common\";\r\nimport { routeContainer } from \"../core\";\r\nimport { IAuthorize } from '../interfaces/i-authorize'\r\nimport { componentInstanceProvider } from \"../core/component-instance-provider\";\r\n@Directive({\r\n    selector: '[rxAuthorize]'\r\n})\r\nexport class RxAuthorizeDirective {\r\n    private viewRef: EmbeddedViewRef<any> | null = null;\r\n    private _context: NgIfContext = new NgIfContext();\r\n\r\n    private _components: any[];\r\n\r\n    constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private injector: Injector) {\r\n    }\r\n\r\n    @Input('rxAuthorize') set component(value: any) {\r\n        if (Array.isArray(value)) {\r\n            var result = true;\r\n            this._components = value;\r\n            this.checkAuth(0);\r\n        } else if (value)\r\n            this.checkAccess(value);\r\n    }\r\n\r\n    checkAuth(index) {\r\n        if (this._components.length > index) {\r\n            this.checkAccess(this._components[index], index);\r\n        } else {\r\n            this.updateView(true)\r\n        }\r\n    }\r\n\r\n    checkAccess(value:any,currentIndex:number = 0) {\r\n        var authorizeModel = routeContainer.get().authorization;\r\n        let component = routeContainer.getModelDecorator(value as Function, \"access\");\r\n        if (authorizeModel && component) {\r\n            var authorize = this.injector.get(authorizeModel) as IAuthorize;\r\n            var authorizeConfig = componentInstanceProvider.getAuthorizeConfig();\r\n            var result = authorize.authorizeChildren(component.functions, authorizeConfig) as Promise<boolean> | boolean;\r\n                if (typeof result === \"boolean\") {\r\n                    if (this._components && this._components.length > 0 && result) {\r\n                        let index = currentIndex + 1;\r\n                        this.checkAuth(index);\r\n                    }\r\n                    else \r\n                        this.updateView(result);\r\n                } else\r\n                    result.then(t => {\r\n                        if (t) {\r\n                            let index = currentIndex + 1;\r\n                            this.checkAuth(index);\r\n                        }else\r\n                        this.updateView(t);\r\n                    })\r\n        }\r\n    }\r\n\r\n    private updateView(value: boolean) {\r\n        if (this.viewRef) {\r\n            this.viewContainerRef.clear();\r\n            this.viewRef = null;\r\n        }\r\n        if (value)\r\n            this.viewRef = this.viewContainerRef.createEmbeddedView(this.templateRef, this._context);\r\n        else\r\n            this.viewContainerRef.clear();\r\n    }\r\n}","import { Injector, Directive,  EmbeddedViewRef, ViewContainerRef, TemplateRef, Input } from \"@angular/core\";\r\nimport { NgIfContext } from \"@angular/common\";\r\nimport { routeContainer } from \"../core\";\r\nimport { IMultilingual } from \"../interfaces/i-multilingual\";\r\n@Directive({\r\n    selector: '[rxMultilingual]'\r\n})\r\nexport class RxMultilingualDirective {\r\n    private viewRef: EmbeddedViewRef<any> | null = null;\r\n    private _context: NgIfContext = new NgIfContext();\r\n\r\n    constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private injector: Injector) {}\r\n\r\n    @Input('rxMultilingual') set component(value: any) {\r\n        let childMultiLingual = routeContainer.get().childMultilingualResolver\r\n        if (childMultiLingual) {\r\n            var childMultilingual = this.injector.get(childMultiLingual) as IMultilingual;\r\n            var result = childMultilingual.resolveChildren(this.viewContainerRef[\"_view\"].component.constructor);\r\n            if(typeof result == \"boolean\")\r\n                this.updateView(result);\r\n            else\r\n                result.then(t => {\r\n                    this.updateView(t);\r\n                })\r\n        }\r\n    }\r\n\r\n    private updateView(value: boolean) {\r\n        if (this.viewRef) {\r\n            this.viewContainerRef.clear();\r\n            this.viewRef = null;\r\n        }\r\n        if (value)\r\n            this.viewRef = this.viewContainerRef.createEmbeddedView(this.templateRef, this._context);\r\n        else\r\n            this.viewContainerRef.clear();\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\n\r\nimport { BaseCanActivate } from \"../guard/base-can-activate.guard\";\r\nimport { BaseCanDeactivate } from \"../guard/base-can-deactivate.guard\";\r\nimport { ExtendRouterLinkWithHref } from \"../directives/extend-router-link-with-href\"\r\nimport { ParamResolver } from '../core/param-resolver.service'\r\nimport { RxAuthorizeDirective } from \"../directives/rx-authorize.directive\";\r\nimport { RxMultilingualDirective } from \"../directives/rx-multilingual.directive\";\r\n\r\n@NgModule({\n    declarations: [ExtendRouterLinkWithHref, RxAuthorizeDirective, RxMultilingualDirective],\n    exports: [ExtendRouterLinkWithHref, RxAuthorizeDirective, RxMultilingualDirective],\n    providers: [BaseCanActivate, BaseCanDeactivate, ParamResolver]\n})\nexport class RxRoutingModule {\n\n}\n","export class AuthorizeConfig {\r\n    accessLevel: number | number[] | any;\r\n    action: string;\r\n    selectorName?: string;\r\n    data?: { [key: string]: any }\r\n}\r\n","import { OnDestroy, Type } from \"@angular/core\";\r\nimport { Router, UrlTree, NavigationExtras } from \"@angular/router\";\r\nimport { RxHttp } from \"@rxweb/http\"\r\nimport { ClientDataStorage } from \"@rxweb/storage\"\r\nimport { componentInstanceProvider } from \"./component-instance-provider\";\r\nimport { routeContainer } from \"./route-container\";\r\nimport { AuthorizeConfig } from '../interfaces/authorize-config'\r\nimport { ExtendNavigationExtras } from \"../interfaces/extend-navigation-extras\";\r\nimport { encoder } from \"../core/encoder\";\r\n\r\nexport abstract class CoreComponent extends RxHttp implements OnDestroy {\r\n\r\n    user: { [key: string]: any };\r\n    params: { [key: string]: any };\r\n    queryParams: { [key: string]: any };\r\n    data: any;\r\n    storage: ClientDataStorage;\r\n    parentAuthorizeConfig: AuthorizeConfig;\r\n    authorizeConfig: AuthorizeConfig\r\n    private navigation: Router;\r\n\r\n    onQueryParamsChanged() { }\r\n    onParamsChanged() { }\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        let result = componentInstanceProvider.getResult();\r\n        if (result && result.activatedRouteSnapshot) {\r\n            this.params = result.activatedRouteSnapshot.params;\r\n            this.queryParams = result.activatedRouteSnapshot.queryParams;\r\n            this.navigation = result.router;\r\n            this.user = routeContainer.getUser();\r\n            this.data = result.activatedRouteSnapshot.data;\r\n            this.storage = new ClientDataStorage();\r\n            this.parentAuthorizeConfig = result.authorizeConfig;\r\n            let decoratorConfig = routeContainer.getModelDecorator(this.constructor as Function, \"access\")\r\n            if (decoratorConfig)\r\n                this.authorizeConfig = decoratorConfig.functions;\r\n            componentInstanceProvider.add(this.constructor.name, this.instanceProvider.bind(this), this.paramsChange.bind(this), this.queryParamsChange.bind(this));\r\n        }\r\n    }\r\n\r\n    private instanceProvider() {\r\n        return this;\r\n    }\r\n\r\n    resolve<T>(component: Type<T>): T {\r\n        return componentInstanceProvider.resolve(component.constructor);\r\n    }\r\n\r\n\r\n    navigate(commands: any[], extras?: ExtendNavigationExtras): Promise<boolean> {\r\n        return this.navigation.navigate(commands.concat(this.getParsedParams(extras)), extras);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        componentInstanceProvider.dispose(this.constructor);\r\n    }\r\n\r\n    private paramsChange(params: { [key: string]: any }) {\r\n        this.params = params;\r\n        this.onParamsChanged();\r\n    }\r\n\r\n    private queryParamsChange(queryParams: { [key: string]: any }) {\r\n        this.queryParams = queryParams;\r\n        this.onQueryParamsChanged();\r\n    }\r\n\r\n    private getParsedParams(extras: ExtendNavigationExtras) {\r\n        let params = []\r\n        if (extras && extras.params) {\r\n            var isEncryption = routeContainer.get().urlEncryption;\r\n            extras.params.forEach(t => {\r\n                let encode = isEncryption ? encoder.encode(t) : t;\r\n                params.push(encode);\r\n            })\r\n        }\r\n        return params\r\n    }\r\n}","import { routeContainer } from \"../core\"\r\nimport { AuthorizeConfig } from \"../interfaces/authorize-config\"\r\n\r\nexport function access(authorizeConfig: AuthorizeConfig) {\r\n    return function (\r\n        target: any\r\n    ) {\r\n        routeContainer.addModelDecorator(target, authorizeConfig,\"access\")\r\n    }\r\n}\r\n","import { routeContainer } from \"../core\"\r\n\r\nexport function anonymous() {\r\n    return function (\r\n        target: any\r\n    ) {\r\n        routeContainer.addModelDecorator(target, null,\"anonymous\")\r\n    }\r\n}\r\n","import { routeContainer } from \"../core\"\r\n\r\nexport function middleware(middlewares: Function[]) {\r\n    return function (\r\n        target: any\r\n    ) {\r\n        routeContainer.addModelDecorator(target, middlewares,\"middleware\")\r\n    }\r\n}\r\n","import { Route } from \"@angular/router\"\r\nimport { RouteProvider } from \"../core/route-provider\";\r\nexport function route(route: Route) {\r\n    return function (\r\n        target: any\r\n    ) {\r\n        route.component = target;\r\n        RouteProvider.addRoute(route);\r\n    }\r\n}\r\n","import { RouterModuleConfig } from \"../interfaces/router-module-config\";\r\nimport { routeContainer } from '../core/route-container'\r\nexport function routerModule(routerConfig: RouterModuleConfig) {\r\n    return function (\r\n        target: any\r\n    ) {\r\n        routeContainer.add(routerConfig);\r\n    }\r\n}\r\n","import { Routes } from \"@angular/router\";\r\nimport { routePath } from \"./route-path.function\";\r\n\r\nexport function routes(routes: Routes) : Routes {\r\n    let _routes: Routes = [];\r\n    routes.forEach(t => {\r\n        if (t.path)\r\n            t.path = routePath(t.path)\r\n        if (t.redirectTo)\r\n            t.redirectTo = routePath(t.redirectTo)\r\n        _routes.push(t)\r\n    })\r\n    return _routes;\r\n}\r\n"]}