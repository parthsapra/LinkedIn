export const httpRequestContainer = new (class {
    constructor() {
        this.serviceContainers = new Array();
    }
    register(target, config, type) {
        let serviceContainer = this.serviceContainers.filter(t => t.target == target && t.type == type)[0];
        if (!serviceContainer)
            this.serviceContainers.push({ target: target, config: config, type: type });
    }
    registerConfig(httpClientConfig) {
        this.baseConfig = httpClientConfig;
    }
    get(target) {
        return this.serviceContainers.filter(t => t.target == target);
    }
    getConfig() {
        return this.baseConfig;
    }
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1yZXF1ZXN0LWNvbnRhaW5lci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9odHRwLyIsInNvdXJjZXMiOlsiY29yZS9odHRwLXJlcXVlc3QtY29udGFpbmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQU16QixJQUFJLENBQUM7SUFBQTtRQUVHLHNCQUFpQixHQUE2QixJQUFJLEtBQUssRUFBMEIsQ0FBQztJQTBCOUYsQ0FBQztJQXZCRyxRQUFRLENBQUMsTUFBVyxFQUFFLE1BQVcsRUFBRSxJQUFZO1FBQzNDLElBQUksZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDbEcsSUFBSSxDQUFDLGdCQUFnQjtZQUNqQixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFRCxjQUFjLENBQUMsZ0JBQXNDO1FBQ2pELElBQUksQ0FBQyxVQUFVLEdBQUcsZ0JBQWdCLENBQUM7SUFDdkMsQ0FBQztJQUlELEdBQUcsQ0FBQyxNQUFXO1FBQ1gsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBR0QsU0FBUztRQUNMLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQixDQUFDO0NBSUosQ0FBQyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJ2aWNlQ29udGFpbmVyQ29uZmlnIH0gZnJvbSBcIi4uL2ludGVyZmFjZS9zZXJ2aWNlLWNvbnRhaW5lci1jb25maWdcIjtcclxuaW1wb3J0IHsgQmFzZUh0dHBDbGllbnRDb25maWcgfSBmcm9tIFwiLi4vaW50ZXJmYWNlL2Jhc2UtaHR0cC1jbGllbnQtY29uZmlnXCI7XHJcblxyXG5leHBvcnQgY29uc3QgaHR0cFJlcXVlc3RDb250YWluZXI6XHJcbiAgICB7XHJcbiAgICAgICAgcmVnaXN0ZXIodGFyZ2V0OiBhbnksIGNvbmZpZzogYW55LHR5cGU6c3RyaW5nKTtcclxuICAgICAgICBnZXQodGFyZ2V0OiBhbnkpOiBTZXJ2aWNlQ29udGFpbmVyQ29uZmlnW107XHJcbiAgICAgICAgZ2V0Q29uZmlnKCk7XHJcbiAgICAgICAgcmVnaXN0ZXJDb25maWcoYmFzZUNvbmZpZzogQmFzZUh0dHBDbGllbnRDb25maWcpO1xyXG4gICAgfSA9IG5ldyAoY2xhc3Mge1xyXG5cclxuICAgICAgICBwcml2YXRlIHNlcnZpY2VDb250YWluZXJzOiBTZXJ2aWNlQ29udGFpbmVyQ29uZmlnW10gPSBuZXcgQXJyYXk8U2VydmljZUNvbnRhaW5lckNvbmZpZz4oKTtcclxuICAgICAgICBwcml2YXRlIGJhc2VDb25maWc6IEJhc2VIdHRwQ2xpZW50Q29uZmlnO1xyXG5cclxuICAgICAgICByZWdpc3Rlcih0YXJnZXQ6IGFueSwgY29uZmlnOiBhbnksIHR5cGU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgICAgICBsZXQgc2VydmljZUNvbnRhaW5lciA9IHRoaXMuc2VydmljZUNvbnRhaW5lcnMuZmlsdGVyKHQgPT4gdC50YXJnZXQgPT0gdGFyZ2V0ICYmIHQudHlwZSA9PSB0eXBlKVswXVxyXG4gICAgICAgICAgICBpZiAoIXNlcnZpY2VDb250YWluZXIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlcnZpY2VDb250YWluZXJzLnB1c2goeyB0YXJnZXQ6IHRhcmdldCwgY29uZmlnOiBjb25maWcsdHlwZTp0eXBlIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmVnaXN0ZXJDb25maWcoaHR0cENsaWVudENvbmZpZzogQmFzZUh0dHBDbGllbnRDb25maWcpIHtcclxuICAgICAgICAgICAgdGhpcy5iYXNlQ29uZmlnID0gaHR0cENsaWVudENvbmZpZztcclxuICAgICAgICB9XHJcbiAgICBcclxuXHJcblxyXG4gICAgICAgIGdldCh0YXJnZXQ6IGFueSk6IFNlcnZpY2VDb250YWluZXJDb25maWdbXSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2VDb250YWluZXJzLmZpbHRlcih0ID0+IHQudGFyZ2V0ID09IHRhcmdldCk7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgZ2V0Q29uZmlnKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5iYXNlQ29uZmlnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgXHJcblxyXG4gICAgfSkoKTtcclxuIl19