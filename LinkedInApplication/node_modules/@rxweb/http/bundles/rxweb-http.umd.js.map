{"version":3,"file":"rxweb-http.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@rxweb/http/functions/util.ts","ng://@rxweb/http/functions/create-query-path.ts","ng://@rxweb/http/models/http-request.ts","ng://@rxweb/http/functions/request-body.ts","ng://@rxweb/http/core/http-request-container.ts","ng://@rxweb/http/functions/get-instance-container.ts","ng://@rxweb/http/models/http-response.ts","ng://@rxweb/http/models/xhr-context.ts","ng://@rxweb/http/models/abstract-request-filter.ts","ng://@rxweb/http/domain/xhr-request.ts","ng://@rxweb/http/functions/create-instance.ts","ng://@rxweb/http/domain/rx-http-response.ts","ng://@rxweb/http/domain/rx-http.ts","ng://@rxweb/http/decorators/http.decorator.ts","ng://@rxweb/http/decorators/filter.decorator.ts","ng://@rxweb/http/decorators/inmemory.decorator.ts","ng://@rxweb/http/core/http-client-config.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFormData(formValue:any) {\r\n    return typeof FormData !== 'undefined' && formValue instanceof FormData;\r\n}\r\n\r\nexport function isBlob(formValue: any) {\r\n    return typeof Blob !== 'undefined' && formValue instanceof Blob;\r\n}\r\n\r\nexport function isArrayBuffer(formValue: any) {\r\n    return typeof ArrayBuffer !== 'undefined' && formValue instanceof ArrayBuffer;\r\n}\r\n\r\n//copied from : https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\nexport function extractHeaders(headers:any) {\r\n\r\n    var arr = headers.trim().split(/[\\r\\n]+/);\r\n    var headerMap = {};\r\n\r\n    arr.forEach(function (line) {\r\n        var parts = line.split(': ');\r\n        var header = parts.shift();\r\n        var value = parts.join(': ');\r\n        headerMap[header] = value;\r\n    });\r\n    return headerMap;\r\n}\r\n\r\n","import { HttpRequestConfig } from \"../interface/http-request-config\";\r\nexport function createQueryPath(config: HttpRequestConfig) {\r\n    return  `${getParams(config)}${getQueryParams(config)}`;\r\n}\r\n\r\nfunction getParams(config: HttpRequestConfig) {\r\n    let params = '';\r\n    if (config && config.params && config.params.length > 0)\r\n        params = `/${config.params.join('/')}`;\r\n    return params;\r\n}\r\n\r\nfunction getQueryParams(config:HttpRequestConfig) {\r\n    let queryParams = '?';\r\n    if (config && config.queryParams)\r\n        Object.keys(config.queryParams).forEach(key => {\r\n            queryParams += `${key}=${config.queryParams[key]}&`\r\n        })\r\n    return queryParams.slice(0, queryParams.length - 1);\r\n}","import { isFormData, isBlob, isArrayBuffer } from \"../functions/util\";\r\nimport { createQueryPath } from \"../functions/create-query-path\";\r\n\r\nexport class HttpRequest {\r\n    constructor(\r\n        public body: any,\r\n        public headers: { [key: string]: any },\r\n        public host: string,\r\n        isHttps: boolean,\r\n        public method: string,\r\n        public path: string,\r\n        public params: any[],\r\n        public queryParams: { [key: string]: any },\r\n        public responseType: string,\r\n        public scheme: string,\r\n        fullPath?: string,\r\n    ) {\r\n        if (!responseType)\r\n            this.responseType = 'json';\r\n        this.isHttps = isHttps;\r\n        if (fullPath)\r\n            this.fullPath = fullPath;\r\n    }\r\n    private _isHttps: boolean;\r\n\r\n    private _fullPath: string;\r\n\r\n    get isHttps() {\r\n        return this._isHttps;\r\n    }\r\n\r\n    set isHttps(value: boolean) {\r\n        this._isHttps = value;\r\n        if (value)\r\n            this.fullPath = this.fullPath.replace(\"http:\", \"https:\");\r\n    }\r\n\r\n    get fullPath() {\r\n        return this._fullPath ? this._fullPath : `${this.host}/${this.path}${createQueryPath({ params: this.params, queryParams: this.queryParams })}`;\r\n    }\r\n\r\n    set fullPath(value) {\r\n        this._fullPath = value;\r\n    }\r\n\r\n    getContentType() {\r\n\r\n        if (this.body === null) {\r\n            return null;\r\n        }\r\n\r\n        if (isFormData(this.body)) {\r\n            return null;\r\n        }\r\n\r\n        if (isBlob(this.body)) {\r\n            return this.body.type || null;\r\n        }\r\n        if (isArrayBuffer(this.body)) {\r\n            return null;\r\n        }\r\n\r\n        if (typeof this.body === 'string') {\r\n            return 'text/plain';\r\n        }\r\n\r\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\r\n            Array.isArray(this.body)) {\r\n            return 'application/json';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    serializeBody(): string {\r\n        if (this.body === null) {\r\n            return null;\r\n        }\r\n\r\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\r\n            typeof this.body === 'string') {\r\n            return this.body;\r\n        }\r\n        if (this.method == 'PATCH')\r\n            this.body = this.convertPatchBody(this.body);\r\n\r\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\r\n            Array.isArray(this.body)) {\r\n            return JSON.stringify(this.body);\r\n        }\r\n        if (this.body)\r\n            return String(this.body);\r\n        return '';\r\n    }\r\n\r\n    private convertPatchBody(object: Object): any {\r\n        let patchBody = [];\r\n        for (var col in object) {\r\n            patchBody.push({\r\n                'op': 'replace',\r\n                'path': '/' + col,\r\n                'value': object[col]\r\n            });\r\n        }\r\n        return patchBody;\r\n    }\r\n}","import { ServiceContainerConfig } from \"../interface/service-container-config\";\r\nimport { HttpRequestConfig } from \"../interface/http-request-config\";\r\nimport { HttpRequest} from '../models/http-request'\r\nimport { HttpRequestBodyConfig } from \"../interface/http-request-body-config\";\r\nimport { BaseHttpClientConfig } from \"../interface/base-http-client-config\";\r\n\r\nexport function requestBody(method: string, baseConfig: any, serviceContainer: ServiceContainerConfig, config: HttpRequestConfig | HttpRequestBodyConfig | string, instance: any): HttpRequest {\r\n        \r\n    if (!(typeof config == \"string\")) {\r\n        let uri = getHostUri(baseConfig, serviceContainer, config);\r\n        let path = (config && config.path) ? config.path : serviceContainer.config.path;\r\n        let isHttps = uri.startsWith(\"https://\");\r\n        return new HttpRequest(\r\n            config ? (<HttpRequestBodyConfig>config).body : undefined,\r\n            {},\r\n            uri,\r\n            isHttps,\r\n            method,\r\n            path,\r\n            config && config.params ? config.params : [],\r\n            config && config.queryParams ? config.queryParams : {},\r\n            config ? config.responseType : undefined,\r\n            isHttps ? 'https' : 'http',\r\n        );\r\n    } else {\r\n        let isHttps = config.startsWith(\"https://\");\r\n        return new HttpRequest(\r\n            undefined,\r\n            {},\r\n            config,\r\n            config.startsWith(\"https://\"),\r\n            method,\r\n            config,\r\n            [],\r\n            {},\r\n            undefined,\r\n            isHttps ? 'https' : 'http',\r\n            config,\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nfunction getHostUri(baseConfig: BaseHttpClientConfig, serviceContainer: ServiceContainerConfig, config: HttpRequestConfig) {\r\n    if (config && config.hostUri)\r\n        return config.hostUri;\r\n    if (serviceContainer && serviceContainer.config && serviceContainer.config.hostKey)\r\n        return baseConfig.hostURIs.filter(t => t.name == serviceContainer.config.hostKey)[0].uri;\r\n    if (baseConfig.hostURIs)\r\n        return baseConfig.hostURIs.filter(t => t.default == true)[0].uri;\r\n    return window.location.origin;\r\n}\r\n\r\n\r\n\r\n","import { ServiceContainerConfig } from \"../interface/service-container-config\";\r\nimport { BaseHttpClientConfig } from \"../interface/base-http-client-config\";\r\n\r\nexport const httpRequestContainer:\r\n    {\r\n        register(target: any, config: any,type:string);\r\n        get(target: any): ServiceContainerConfig[];\r\n        getConfig();\r\n        registerConfig(baseConfig: BaseHttpClientConfig);\r\n    } = new (class {\r\n\r\n        private serviceContainers: ServiceContainerConfig[] = new Array<ServiceContainerConfig>();\r\n        private baseConfig: BaseHttpClientConfig;\r\n\r\n        register(target: any, config: any, type: string): void {\r\n            let serviceContainer = this.serviceContainers.filter(t => t.target == target && t.type == type)[0]\r\n            if (!serviceContainer)\r\n                this.serviceContainers.push({ target: target, config: config,type:type });\r\n        }\r\n\r\n        registerConfig(httpClientConfig: BaseHttpClientConfig) {\r\n            this.baseConfig = httpClientConfig;\r\n        }\r\n    \r\n\r\n\r\n        get(target: any): ServiceContainerConfig[] {\r\n            return this.serviceContainers.filter(t => t.target == target);\r\n        }\r\n\r\n\r\n        getConfig() {\r\n            return this.baseConfig;\r\n        }\r\n\r\n        \r\n\r\n    })();\r\n","import { httpRequestContainer } from \"../core/http-request-container\";\r\n\r\nexport function getInstanceContainer(instance: any) {\r\n    let container = httpRequestContainer.get(instance.constructor);\r\n    let prototype = (!container || container.length == 0) ? instance.__proto__ : {};\r\n    if (prototype.__proto__) {\r\n        let isLoop = false;\r\n        do {\r\n            isLoop = prototype.__proto__.constructor != Object;\r\n            if (isLoop) {\r\n                container = httpRequestContainer.get(prototype.__proto__.constructor);\r\n                isLoop = container == undefined;\r\n            }\r\n        }while(isLoop)\r\n    }\r\n    return container;\r\n}","export class HttpResponse {\r\n\r\n    constructor() { }\r\n\r\n    isInMemoryResponse: boolean;\r\n    statusCode: number;\r\n    statusText: string;\r\n    headers: { [key: string]: any };\r\n    body: any;\r\n    contentLength: number;\r\n    contentType: string;\r\n    responseUrl: string;\r\n}","import { HttpRequest } from './http-request';\r\nimport { HttpResponse } from './http-response';\r\nexport class XhrContext {\r\n    private _result: any;\r\n    constructor(public request: HttpRequest, public response: HttpResponse) {\r\n        if (!this.response)\r\n            this.response = new HttpResponse();\r\n    }\r\n\r\n    set result(value: any) {\r\n        this._result = value;\r\n        this.response.isInMemoryResponse = true;\r\n    }\r\n    get result() {\r\n        return this._result;\r\n    }\r\n}","import { XhrContext } from \"../models/xhr-context\";\r\n\r\nexport abstract class AbstractRequestFilter  {\r\n\r\n    abstract onRequest: (context: XhrContext) => void;\r\n\r\n    onRequestExecuting: (context: XhrContext) => void;\r\n\r\n}","import { HttpRequest, HttpResponse} from '../models'\r\nimport { extractHeaders } from \"../functions/util\";\r\n\r\nexport class XhrRequest {\r\n    xhr: XMLHttpRequest;\r\n\r\n    constructor(private request: HttpRequest, private onComplete: Function, private onRequestError: Function, private badRequest: Function) {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open(request.method, request.fullPath);\r\n        Object.keys(request.headers).forEach(t => xhr.setRequestHeader(t, request.headers[t]));\r\n\r\n        if (!request.headers['Accept'])\r\n            xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\r\n\r\n        if (!request.headers['Content-Type']) {\r\n            const contentType = request.getContentType();\r\n            if (contentType !== null) {\r\n                xhr.setRequestHeader('Content-Type', contentType);\r\n            }\r\n        }\r\n\r\n        xhr.addEventListener('load', this.onLoad);\r\n        xhr.addEventListener('error', this.onError);\r\n        xhr.withCredentials = true;\r\n        xhr.send(request.serializeBody());\r\n\r\n        this.xhr = xhr;\r\n    }\r\n\r\n    onLoad = () => {\r\n        let response = new HttpResponse();\r\n        response.statusCode = this.xhr.status\r\n        response.statusText = this.xhr.statusText || 'OK';\r\n        response.headers = extractHeaders(this.xhr.getAllResponseHeaders())\r\n        response.responseUrl = this.xhr.responseURL;\r\n        let body: any = null;\r\n\r\n        if (response.statusCode !== 204)\r\n            body = typeof this.xhr.response === 'undefined' ? this.xhr.responseText : this.xhr.response;\r\n\r\n        if (response.statusCode === 0)\r\n            response.statusCode = !!body ? 200 : 0;\r\n\r\n        let isSuccess = response.statusCode >= 200 && response.statusCode < 300;\r\n        if (this.request.responseType === 'json' && response.headers[\"content-type\"] && response.headers[\"content-type\"].indexOf(\"json\") != -1 && typeof body === 'string') {\r\n            const originalBody = body;\r\n            body = body.replace(/^\\)\\]\\}',?\\n/, '');\r\n            try {\r\n                body = body !== '' ? JSON.parse(body) : null;\r\n            } catch (ex) {\r\n                body = originalBody;\r\n                if (isSuccess) {\r\n                    isSuccess = false;\r\n                    body = { ex, body: body }\r\n                }\r\n            }\r\n        }\r\n        response.body = body;\r\n        if (isSuccess) {\r\n            this.onComplete(response)\r\n            this.dispose()\r\n        }\r\n        else\r\n            this.onError(response);\r\n        \r\n    }\r\n\r\n    onError = (error) => {\r\n        if (this.xhr.status == 400 && this.badRequest)\r\n            this.badRequest(typeof this.xhr.response === 'undefined' ? this.xhr.responseText : this.xhr.response)\r\n        else if (this.onRequestError)\r\n            this.onRequestError({\r\n                responseUrl: this.xhr.responseURL,\r\n                error: error,\r\n                statusCode: this.xhr.status || 0,\r\n                statusText: this.xhr.statusText || 'Unknown Error'\r\n            });\r\n        else\r\n            console.error(error);\r\n        this.dispose();\r\n    }\r\n\r\n\r\n    dispose() {\r\n        if (this.xhr) {\r\n            this.xhr.removeEventListener('load', this.onLoad);\r\n            this.xhr.removeEventListener('error', this.onError);\r\n        }\r\n        this.xhr = null;\r\n        this.request = null;\r\n        this.onComplete = null;\r\n        this.onRequestError = null;\r\n        this.badRequest = null;\r\n    }\r\n}","export function createInstance(model: any, objectArguments: any[]) {\r\n    let classInstance = Object.create(model.prototype)\r\n    try{\r\n        model.apply(classInstance, objectArguments);\r\n    }catch(ex){\r\n        ///resolution of issue https://github.com/rxweb/rxweb/issues/188\r\n        classInstance = Reflect.construct(model,objectArguments);\r\n    }\r\n    return classInstance;\r\n}","import { XhrFilterConfig } from \"../interface/xhr-filter-config\";\r\nimport { XhrRequest } from \"./xhr-request\";\r\nimport { ResponseFilter } from \"../interface/response-filter\";\r\nimport { createInstance } from \"../functions/create-instance\";\r\nimport { HttpRequest, HttpResponse, XhrContext } from '../models'\r\n\r\nexport class RxHttpResponse {\r\n    private _index: number = 0;\r\n    private _onSuccess: Function;\r\n    private _onError: any;\r\n    private _onResponse: ResponseFilter[] = new Array<ResponseFilter>();\r\n\r\n    constructor(private request: HttpRequest, private filters: XhrFilterConfig[], private inMemoryFilter: XhrFilterConfig, private onError: (response: HttpResponse) => void, private badRequest: (result: any) => void) {\r\n\r\n    }\r\n\r\n\r\n    process(type: string, success?: any) {\r\n        this._onSuccess = this.onComplete(type, success);\r\n        this._onError = success;\r\n        this.inMemoryFilter ? this.callFilter(this.inMemoryFilter) : this.executeFilterOnRequest()\r\n    }\r\n\r\n\r\n    private executeFilterOnRequest() {\r\n        if (this.filters && this.filters.length > 0 && this.filters.length > this._index) {\r\n            this.callFilter(this.filters[this._index])\r\n        } else\r\n            new XhrRequest(this.request, this._onSuccess, this.onRequestError.bind(this), this.badRequest);\r\n    }\r\n\r\n    private callFilter(filterConfig: XhrFilterConfig) {\r\n        if (!filterConfig.runsOn || filterConfig.runsOn.indexOf(this.request.method) != -1) {\r\n            let modelInstance = createInstance(filterConfig.model, filterConfig.args || []) as any;\r\n            modelInstance.onRequestExecuting = this.onRequestExecuting()\r\n            this._index++;\r\n            modelInstance.onRequest(new XhrContext(this.request, new HttpResponse()));\r\n            if (modelInstance[\"onResponse\"])\r\n                this._onResponse.push(modelInstance);\r\n        } else\r\n            this._index++;\r\n\r\n    }\r\n\r\n    private onComplete(resultType: string, onSuccess: any) {\r\n        return (response: HttpResponse) => {\r\n            if (this._onResponse.length > 0 && !response.isInMemoryResponse)\r\n                this._onResponse.forEach(t => t.onResponse(response))\r\n            onSuccess.next(response.body);\r\n            onSuccess.complete();\r\n        }\r\n    }\r\n\r\n    onRequestExecuting = () => {\r\n        return (context: XhrContext) => {\r\n            if (context.response.statusCode) {\r\n                let response = { ...context.response, ...{ body: context.result } }\r\n                if (response.statusCode >= 200 && response.statusCode < 300)\r\n                    this._onSuccess(response);\r\n                else {\r\n                    this._onError.error(response);\r\n                    this.onError(response);\r\n                }\r\n\r\n            } else\r\n                this.executeFilterOnRequest()\r\n        }\r\n    }\r\n\r\n    onRequestError(response: any) {\r\n        this._onError.error(response);\r\n        if (this.onError)\r\n            this.onError(response);\r\n    }\r\n\r\n}","import { HttpRequestConfig} from \"../interface/http-request-config\";\r\nimport { requestBody } from \"../functions/request-body\";\r\nimport { getInstanceContainer } from \"../functions/get-instance-container\";\r\nimport { ServiceContainerConfig } from \"../interface/service-container-config\";\r\nimport { RxHttpResponse } from \"./rx-http-response\";\r\nimport { httpRequestContainer } from \"../core/http-request-container\";\r\nimport { XhrFilterConfig } from \"../interface/xhr-filter-config\";\r\nimport { Observable, forkJoin , Subscription } from \"rxjs\";\r\nimport { BaseHttpClientConfig } from \"../interface/base-http-client-config\";\r\nimport { HttpRequestBodyConfig } from \"../interface/http-request-body-config\";\r\nimport { LookupHttpRequestConfig } from \"../interface/lookup-http-request-config\";\r\nimport { HttpResponse } from '../models'\r\nexport class RxHttp {\r\n\r\n    path: string;\r\n\r\n    private _serviceContainers: ServiceContainerConfig[]\r\n    private _baseConfig: BaseHttpClientConfig;\r\n\r\n    onError: (response: HttpResponse) => void;\r\n    badRequest: (result: any) => void;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    private getFilters() {\r\n        let filters = (this._baseConfig && this._baseConfig.filters) ? this._baseConfig.filters : [];\r\n        let filterService = this._serviceContainers.filter(t => t.type == \"filter\")[0];\r\n        let requestFilters = [];\r\n        if (filterService)\r\n            filterService.config.forEach(t => requestFilters.push(t));\r\n        filters.forEach(t => requestFilters.push(t));\r\n        return requestFilters;\r\n    }\r\n\r\n    private getInMemoryFilter(): XhrFilterConfig {\r\n        let inMemory = this._serviceContainers.filter(t => t.type == \"inmemory\")[0];\r\n        if (inMemory && this._baseConfig && this._baseConfig.filters)\r\n            return this._baseConfig.filters.filter(t => t.isInMemory)[0];\r\n        return null;\r\n    }\r\n\r\n    private request<T>(method: string, config: HttpRequestConfig | HttpRequestBodyConfig | string): Observable<T> {\r\n        return new Observable(subscriber => {\r\n            if (!this._baseConfig)\r\n                this._baseConfig = httpRequestContainer.getConfig() || {};\r\n            if (!this._serviceContainers)\r\n                this._serviceContainers = getInstanceContainer(this);\r\n            let serviceContainer = this._serviceContainers.filter(t => t.type == \"http\")[0]\r\n            let request = requestBody(method, this._baseConfig, serviceContainer, config, this);\r\n            if (request) {\r\n                let error = this._baseConfig ? this._baseConfig.onError : null;\r\n                let response = new RxHttpResponse(request, this.getFilters(), this.getInMemoryFilter(), this.onError || error, this.badRequest);\r\n                response.process('subscribe', subscriber);\r\n            } else {\r\n                subscriber.next(null);\r\n                subscriber.complete();\r\n            }\r\n        })\r\n    }\r\n\r\n    lookup<T>(configs: LookupHttpRequestConfig[]): Observable<T> {\r\n        return new Observable(subscriber => {\r\n            let propNames = [];\r\n            let subscriptions = [];\r\n            let jObject:any = {};\r\n            configs.forEach(t => {\r\n                propNames.push(t.propName);\r\n                subscriptions.push(this.get(t).subscribe(X => {\r\n                    jObject[t.propName] = X;\r\n                    if (Object.keys(jObject).length == propNames.length) {\r\n                        subscriber.next(jObject);\r\n                        subscriber.complete();\r\n                    }\r\n                }));\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    get<T>(config?: HttpRequestConfig | string): Observable<T>  {\r\n        return this.request('GET', config);\r\n    }\r\n\r\n    post<T>(config: HttpRequestBodyConfig | string): Observable<T>  {\r\n        return this.request('POST', config);\r\n    }\r\n\r\n    put<T>(config: HttpRequestBodyConfig | string): Observable<T> {\r\n        return this.request('PUT', config);\r\n    }\r\n\r\n    patch<T>(config: HttpRequestBodyConfig | string): Observable<T>  {\r\n        return this.request('PATCH', config);\r\n    }\r\n\r\n    delete<T>(config: HttpRequestBodyConfig | string): Observable<T>  {\r\n        return this.request('DELETE', config);\r\n    }\r\n}","import { HttpConfig } from \"../interface/http-config\";\r\nimport { httpRequestContainer } from \"../core/http-request-container\";\r\n\r\nexport function http(config?: HttpConfig) {\r\n    return function (target) {\r\n        httpRequestContainer.register(target,config,\"http\")\r\n    }\r\n}   ","import { XhrFilterConfig } from \"../interface/xhr-filter-config\";\r\nimport { httpRequestContainer } from \"../core/http-request-container\";\r\n\r\nexport function xhrFilter(config: XhrFilterConfig[]) {\r\n    return function (target) {\r\n        httpRequestContainer.register(target, config,\"filter\")\r\n    }\r\n}   ","import { httpRequestContainer } from \"../core/http-request-container\";\r\n\r\nexport function inMemory() {\r\n    return function (target) {\r\n        httpRequestContainer.register(target, null,\"inmemory\")\r\n    }\r\n}   ","import { httpRequestContainer } from \"./http-request-container\";\r\nimport { BaseHttpClientConfig } from \"../interface/base-http-client-config\";\r\n\r\nexport class HttpClientConfig {\r\n\r\n    static register(config: BaseHttpClientConfig) {\r\n        httpRequestContainer.registerConfig(config);\r\n    }\r\n}"],"names":["Observable"],"mappings":"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"}